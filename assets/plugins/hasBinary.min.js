function isArray(e){return Array.isArray(e)}var toString=Object.prototype.toString,withNativeBlob="function"==typeof Blob||"undefined"!=typeof Blob&&"[object BlobConstructor]"===toString.call(Blob),withNativeFile="function"==typeof File||"undefined"!=typeof File&&"[object FileConstructor]"===toString.call(File);const exports={};if("object"==typeof exports&&"undefined"!=typeof module)module.exports=exports;else if("function"==typeof define&&define.amd)define([],exports);else{var r;(r="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).hasBin=exports}function hasBinary(e){if(!e||"object"!=typeof e)return!1;if(isArray(e)){for(var t=0,o=e.length;t<o;t++)if(hasBinary(e[t]))return!0;return!1}if("function"==typeof Buffer&&Buffer.isBuffer&&Buffer.isBuffer(e)||"function"==typeof ArrayBuffer&&e instanceof ArrayBuffer||withNativeBlob&&e instanceof Blob||withNativeFile&&e instanceof File)return!0;if(e.toJSON&&"function"==typeof e.toJSON&&1===arguments.length)return hasBinary(e.toJSON(),!0);for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)&&hasBinary(e[r]))return!0;return!1}exports.hasBinary=hasBinary;